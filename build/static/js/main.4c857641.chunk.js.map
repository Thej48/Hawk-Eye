{"version":3,"sources":["Components/Header/Header.js","Components/MainNav.js","config/config.js","Components/Carousel/Carousel.js","Components/ContentModal/ContentModal.js","Components/TrendingCard/TrendingCard.js","Components/Pagination/CustomPagination.js","Pages/Trending/Trending.js","Components/Genres.js","hooks/useGenres.js","Pages/Movies/Movies.js","Pages/Series/Series.js","Pages/Search/Search.js","Components/ScrollToTop/ScrollToTop.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","className","onClick","window","scroll","useStyles","makeStyles","root","width","position","backgroundColor","bottom","zIndex","SimpleBottomNavigation","classes","React","value","setValue","history","useHistory","useEffect","push","Box","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","img_300","img_500","unavailable","handleDragStart","e","preventDefault","Carousel","media_type","id","useState","credits","setCredits","items","map","c","src","profile_path","alt","name","onDragStart","fetchCredits","a","axios","get","process","data","cast","autoPlay","responsive","mouseTracking","infinite","disableDotsControls","disableButtonsControls","theme","modal","display","alignItems","alignContent","justifyContent","paper","height","background","border","borderRadius","color","boxShadow","shadows","padding","spacing","TransitionsModal","children","open","setOpen","content","setContent","video","setVideo","fetchData","fetchVideo","results","key","style","cursor","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","poster_path","title","backdrop_path","first_air_date","release_date","substring","tagline","overview","Button","variant","startIcon","target","href","TrendingCard","poster","date","vote_average","Badge","badgeContent","showZero","CustomPagination","setPage","numOfPages","marginTop","Pagination","count","size","shape","page","textContent","hideNextButton","hidePrevButton","Trending","fetchTrending","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","fetchGenres","console","log","genre","Chip","margin","clickable","onDelete","filter","selected","handleRemove","g","handleAdd","useGenres","length","reduce","acc","curr","Movies","setNumOfPages","genreforURL","fetchMovies","total_pages","Series","Search","setType","searchText","setSearchText","darkTheme","createTheme","palette","primary","main","fetchSearch","TextField","flex","borderBottomColor","textColor","marginLeft","Tabs","indicatorColor","paddingBottom","Tab","ScrollToTop","pathname","useLocation","scrollTo","App","Container","path","component","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.4c857641.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <span className=\"header\" onClick={() => window.scroll(0,0)} >🎞️ Hawk Eye 📽️</span>\r\n    );\r\n};\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport BottomNavigation from '@mui/material/BottomNavigation/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\n\r\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport MovieIcon from '@mui/icons-material/Movie';\r\nimport TvIcon from '@mui/icons-material/Tv';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n        backgroundColor: 'gray',\r\n        bottom: 0,\r\n        zIndex: 100,\r\n    },\r\n});\r\n\r\nexport default function SimpleBottomNavigation() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (value === 0)\r\n            history.push(\"/\");\r\n        else if (value === 1)\r\n            history.push(\"/movies\");\r\n        else if (value === 2)\r\n            history.push(\"/series\");\r\n        else if (value === 3)\r\n            history.push(\"/search\");\r\n    }, [value, history])\r\n\r\n    return (\r\n        <Box >\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={(event, newValue) => {\r\n                    setValue(newValue);\r\n                }}\r\n                showLabels\r\n                className={classes.root}\r\n            >\r\n                <BottomNavigationAction label=\"Trending\" icon={<WhatshotIcon />} />\r\n                <BottomNavigationAction label=\"Movies\" icon={<MovieIcon />} />\r\n                <BottomNavigationAction label=\"TV Series\" icon={<TvIcon />} />\r\n                <BottomNavigationAction label=\"Search\" icon={<SearchIcon />} />\r\n            </BottomNavigation>\r\n        </Box>\r\n    );\r\n}","//image sizes for tmdb\r\nexport const img_300 = \"https://image.tmdb.org/t/p/w300\";\r\nexport const img_500 = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n// contentModal and singleContent\r\nexport const unavailable =\r\n  \"https://www.movienewz.com/img/films/poster-holder.jpg\";\r\n\r\n// contentModal\r\nexport const unavailableLandscape =\r\n  \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\";\r\n\r\n// For Carousel\r\nexport const noPicture =\r\n  \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport { img_300, noPicture } from '../../config/config';\r\nimport './Carousel.css';\r\n\r\nconst handleDragStart = (e) => e.preventDefault();\r\n\r\n\r\n\r\nconst Carousel = ({ media_type, id }) => {\r\n\r\n    const [credits, setCredits] = useState();\r\n\r\n    const items = credits?.map((c) => (\r\n        <div className=\"carouselItem\">\r\n            <img src={c.profile_path ? `${img_300}/${c.profile_path}` : noPicture}\r\n                alt={c?.name}\r\n                onDragStart={handleDragStart}\r\n                className=\"carouselItem__img\"\r\n            />\r\n            <b className=\"carouselItem__txt\">{c?.name}</b>\r\n        </div>\r\n    ));\r\n\r\n    const responsive = {\r\n        0: {\r\n            items: 3,\r\n        },\r\n        512: {\r\n            items: 5,\r\n        },\r\n        1024: {\r\n            items: 7,\r\n        },\r\n    };\r\n\r\n\r\n    const fetchCredits = async () => {\r\n        const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/${media_type}/${id}/credits?api_key=${process.env.REACT_APP_API}&language=en-US`\r\n        );\r\n        setCredits(data.cast);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCredits();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AliceCarousel \r\n        autoPlay \r\n        responsive={responsive} \r\n        mouseTracking \r\n        infinite \r\n        disableDotsControls \r\n        disableButtonsControls \r\n        items={items} />\r\n    );\r\n}\r\n\r\nexport default Carousel;","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport axios from \"axios\";\r\nimport {\r\n  img_500,\r\n  unavailable,\r\n  unavailableLandscape,\r\n} from \"../../config/config\";\r\nimport './ContentModal.css';\r\nimport { Button } from \"@material-ui/core\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport Carousel from \"../Carousel/Carousel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    width: \"90%\",\r\n    height: \"80%\",\r\n    // background: \"linear-gradient(90deg, rgba(0,0,0,0.9), rgba(158, 7, 37,0.9))\",\r\n    background: \"linear-gradient(rgba(50, 50, 50, 0.975), rgba(199, 199, 199, 0.899))\",\r\n    border: \"1px solid #282c34\",\r\n    borderRadius: 10,\r\n    color: \"white\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 1, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal({ children, media_type, id }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [content, setContent] = useState();\r\n  const [video, setVideo] = useState();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/${media_type}/${id}?api_key=${process.env.REACT_APP_API}&language=en-US`\r\n    );\r\n\r\n    setContent(data);\r\n    // console.log(data);\r\n  };\r\n\r\n  const fetchVideo = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/${media_type}/${id}/videos?api_key=${process.env.REACT_APP_API}&language=en-US`\r\n    );\r\n\r\n    setVideo(data.results[0]?.key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchVideo();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"media\"\r\n        style={{ cursor: \"pointer\" }}\r\n        color=\"inherit\"\r\n        onClick={handleOpen}\r\n      >\r\n        {children}\r\n      </div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          {content && (\r\n            <div className={classes.paper}>\r\n              <div className=\"ContentModal\">\r\n                <img\r\n                  src={\r\n                    content.poster_path\r\n                      ? `${img_500}/${content.poster_path}`\r\n                      : unavailable\r\n                  }\r\n                  alt={content.name || content.title}\r\n                  className=\"ContentModal__portrait\"\r\n                />\r\n                <img\r\n                  src={\r\n                    content.backdrop_path\r\n                      ? `${img_500}/${content.backdrop_path}`\r\n                      : unavailableLandscape\r\n                  }\r\n                  alt={content.name || content.title}\r\n                  className=\"ContentModal__landscape\"\r\n                />\r\n                <div className=\"ContentModal__about\">\r\n                  <span className=\"ContentModal__title\">\r\n                    {content.name || content.title} (\r\n                    {(\r\n                      content.first_air_date ||\r\n                      content.release_date ||\r\n                      \"-----\"\r\n                    ).substring(0, 4)}\r\n                    )\r\n                  </span>\r\n                  {content.tagline && (\r\n                    <i className=\"tagline\">{content.tagline}</i>\r\n                  )}\r\n\r\n                  <span className=\"ContentModal__description\">\r\n                    {content.overview}\r\n                  </span>\r\n\r\n                  <div>\r\n                    <Carousel id={id} media_type={media_type} />\r\n                  </div>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<YouTubeIcon />}\r\n                    color=\"secondary\"\r\n                    target=\"__blank\"\r\n                    href={`https://www.youtube.com/watch?v=${video}`}\r\n                  >\r\n                    Watch the Trailer\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}","import { Badge } from '@mui/material';\r\nimport React from 'react';\r\nimport { img_300, unavailable } from \"../../config/config\";\r\nimport TransitionsModal from '../ContentModal/ContentModal';\r\n// import ContentModal from '../ContentModal/ContentModal';\r\nimport \"./TrendingCard.css\";\r\n\r\nconst TrendingCard = ({\r\n    id,\r\n    poster,\r\n    title,\r\n    date,\r\n    media_type,\r\n    vote_average\r\n}) => {\r\n    return (\r\n        <TransitionsModal media_type={media_type} id={id}>\r\n            <Badge badgeContent={vote_average} showZero color={vote_average > 6 ? 'primary' : 'secondary'} />\r\n            <img className=\"poster\" src={poster ? `${img_300}/${poster}` : unavailable} alt={title} />\r\n            <b className=\"title\">{title}</b>\r\n            <span className=\"subTitle\">\r\n                {media_type === 'tv' ? \"TV Series\" : \"Movie\"}\r\n                <span className=\"subTitle\">\r\n                    {date}\r\n                </span>\r\n            </span>\r\n        </TransitionsModal>\r\n    );\r\n};\r\n\r\nexport default TrendingCard;","import { Pagination } from '@mui/material';\r\nimport React from 'react';\r\n\r\n\r\nconst CustomPagination = ({ setPage, numOfPages = 10 }) => {\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page);\r\n        window.scroll(0, 0);\r\n    };\r\n\r\n    return (\r\n        <div\r\n        style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: 10,\r\n        }}\r\n        >\r\n            <Pagination count={numOfPages}  size=\"medium\" variant=\"outlined\" shape=\"round\" onChange={(e) => handlePageChange(e.target.textContent) } hideNextButton hidePrevButton/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomPagination;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from 'react';\r\nimport TrendingCard from '../../Components/TrendingCard/TrendingCard';\r\nimport './Trending.css';\r\nimport CustomPagination from '../../Components/Pagination/CustomPagination';\r\n\r\nconst Trending = () => {\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [content, setContent] = useState([]);\r\n\r\n    const fetchTrending = async () => {\r\n        const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_API}&page=${page}`\r\n        );\r\n\r\n        // console.log(data);\r\n\r\n        setContent(data.results);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTrending();\r\n        // eslint-disable-next-line\r\n    }, [page]);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <span className=\"pageTitle\">Trending</span>\r\n\r\n            <div className=\"trending\">\r\n                {content && content.map((c) => (\r\n                    <TrendingCard key={c.id}\r\n                        id={c.id}\r\n                        poster={c.poster_path}\r\n                        title={c.title || c.name}\r\n                        date={c.first_air_date || c.release_date}\r\n                        media_type={c.media_type}\r\n                        vote_average={c.vote_average}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n<CustomPagination setPage={setPage} />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Trending;","import { Chip } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\n\r\nconst Genres = ({\r\n    selectedGenres,\r\n    setSelectedGenres,\r\n    genres,\r\n    setGenres,\r\n    type,\r\n    setPage,\r\n}) => {\r\n\r\n    const handleAdd = (genre) => {\r\n        setSelectedGenres([...selectedGenres, genre]);\r\n        setGenres(genres.filter((g) => g.id !== genre.id));\r\n        setPage(1);\r\n    };\r\n\r\n    const handleRemove = (genre) => {\r\n        setSelectedGenres(\r\n            selectedGenres.filter((selected) => selected.id !== genre.id)\r\n        );\r\n        setGenres([...genres, genre]);\r\n        setPage(1);\r\n    };\r\n\r\n    const fetchGenres = async () => {\r\n        const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API}&language=en-US`\r\n        );\r\n\r\n        setGenres(data.genres);\r\n    };\r\n\r\n    console.log(genres);\r\n\r\n    useEffect(() => {\r\n        fetchGenres();\r\n\r\n        return () => {\r\n            setGenres({});\r\n        };\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding: \"6px 0\" }}>\r\n\r\n            {selectedGenres &&\r\n                selectedGenres.map((genre) => (\r\n                    <Chip label={genre.name}\r\n                        style={{ margin: 2 }}\r\n                        size='small'\r\n                        color=\"primary\"\r\n                        key={genre.id}\r\n                        clickable\r\n                        onDelete={() => handleRemove(genre)} />\r\n                ))}\r\n\r\n            {genres &&\r\n                genres.map((genre) => (\r\n                    <Chip label={genre.name}\r\n                        style={{ margin: 2, color: \"white\", backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n                        size='small'\r\n                        key={genre.id}\r\n                        clickable\r\n                        onClick={() => handleAdd(genre)} />\r\n                ))}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genres;","// import React from 'react';\r\n\r\nconst useGenres = (selectedGenres) => {\r\n    if(selectedGenres.length<1) return \"\";\r\n\r\n    const GenreIds=selectedGenres.map((g) => g.id);\r\n    return GenreIds.reduce((acc,curr)=>acc+','+curr);\r\n\r\n\r\n};\r\n\r\nexport default useGenres;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CustomPagination from '../../Components/Pagination/CustomPagination';\r\nimport TrendingCard from '../../Components/TrendingCard/TrendingCard';\r\nimport Genres from '../../Components/Genres';\r\nimport useGenres from '../../hooks/useGenres';\r\n\r\nconst Movies = () => {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [content, setContent] = useState([]);\r\n    const [numOfPages, setNumOfPages] = useState();\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const genreforURL=useGenres(selectedGenres);\r\n\r\n\r\n\r\n    const fetchMovies = async () => {\r\n        const { data } = await axios.get(\r\n            // `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`\r\n            `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\r\n        );\r\n\r\n        // console.log(data);\r\n        setContent(data.results);\r\n        setNumOfPages(data.total_pages);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n        // eslint-disable-next-line\r\n    }, [page,genreforURL])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"pageTitle\">Movies</span>\r\n\r\n            <Genres\r\n            type=\"movie\" \r\n            selectedGenres={selectedGenres} \r\n            setSelectedGenres={setSelectedGenres} \r\n            genres={genres} \r\n            setGenres={setGenres} \r\n            setPage={setPage}\r\n            />\r\n\r\n            <div className=\"trending\">\r\n                {content && content.map((c) => (\r\n                    <TrendingCard key={c.id}\r\n                        id={c.id}\r\n                        poster={c.poster_path}\r\n                        title={c.title || c.name}\r\n                        date={c.first_air_date || c.release_date}\r\n                        media_type=\"movie\"\r\n                        vote_average={c.vote_average}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {numOfPages > 1 && (\r\n                <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movies;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Genres from '../../Components/Genres';\r\nimport CustomPagination from '../../Components/Pagination/CustomPagination';\r\nimport TrendingCard from '../../Components/TrendingCard/TrendingCard';\r\nimport useGenres from '../../hooks/useGenres';\r\n\r\nconst Series = () => {\r\n\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [content, setContent] = useState([]);\r\n    const [numOfPages, setNumOfPages] = useState();\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const genreforURL=useGenres(selectedGenres);\r\n\r\n\r\n\r\n    const fetchMovies = async () => {\r\n        const { data } = await axios.get(\r\n            // `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`\r\n            `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\r\n        );\r\n\r\n        // console.log(data);\r\n        setContent(data.results);\r\n        setNumOfPages(data.total_pages);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n        // eslint-disable-next-line\r\n    }, [page,genreforURL])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"pageTitle\">Series</span>\r\n\r\n            <Genres\r\n            type=\"tv\" \r\n            selectedGenres={selectedGenres} \r\n            setSelectedGenres={setSelectedGenres} \r\n            genres={genres} \r\n            setGenres={setGenres} \r\n            setPage={setPage}\r\n            />\r\n\r\n            <div className=\"trending\">\r\n                {content && content.map((c) => (\r\n                    <TrendingCard key={c.id}\r\n                        id={c.id}\r\n                        poster={c.poster_path}\r\n                        title={c.title || c.name}\r\n                        date={c.first_air_date || c.release_date}\r\n                        media_type=\"tv\"\r\n                        vote_average={c.vote_average}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {numOfPages > 1 && (\r\n                <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Series;","import { Button, Tab, Tabs, TextField } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Search.css'\r\nimport { createTheme } from '@material-ui/core/styles'\r\n// import { createTheme, Mu } from '@material-ui/core';\r\n\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport axios from 'axios';\r\nimport CustomPagination from '../../Components/Pagination/CustomPagination';\r\nimport TrendingCard from '../../Components/TrendingCard/TrendingCard';\r\n\r\nconst Search = () => {\r\n\r\n    const [type, setType] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [content, setContent] = useState();\r\n    const [numOfPages, setNumOfPages] = useState();\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            type: \"dark\",\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n        },\r\n    });\r\n\r\n\r\n    //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@---LOGIC---@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2\r\n\r\n    const fetchSearch = async () => {\r\n        const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${process.env.REACT_APP_API}&language=en-US&query=${searchText}&page=${page}&include_adult=false`\r\n        );\r\n\r\n        setContent(data.results);\r\n        setNumOfPages(data.total_pages);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0);\r\n        fetchSearch();\r\n        // eslint-disable-next-line\r\n    }, [type, page])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ThemeProvider theme={darkTheme}>\r\n\r\n                <div style={{ display: \"flex\", margin: \"15px 0\" }}>\r\n\r\n                    <TextField\r\n                        style={{ flex: 1, color: \"white\", borderBottomColor: \"white\" }}\r\n                        className=\"searchBox\"\r\n                        label=\"Search\"\r\n                        textColor=\"white\"\r\n                        variant=\"filled\"\r\n                        onChange={(e) => setSearchText(e.target.value)}\r\n                    />\r\n\r\n                    <Button variant=\"contained\" style={{ marginLeft: 10 }} onClick={fetchSearch}>\r\n                        <SearchIcon />\r\n                    </Button>\r\n\r\n                </div>\r\n\r\n\r\n                <Tabs value={type} indicatorColor=\"primary\" textColor=\"primary\"\r\n                    onChange={(event, newValue) => {\r\n                        setType(newValue);\r\n                        setPage(1);\r\n                    }}\r\n                    style={{paddingBottom: \"5\", width: \"100%\" }}\r\n                >\r\n                    <Tab style={{display:\"flex\", width: \"50%\" }} label=\"Search Movies\" />\r\n                    <Tab style={{display:\"flex\", width: \"50%\" }} label=\"Search TV Series\" />\r\n                </Tabs>\r\n\r\n            </ThemeProvider>\r\n\r\n            <div className=\"trending\">\r\n                {content && content.map((c) => (\r\n                    <TrendingCard\r\n                    key={c.id}\r\n                        id={c.id}\r\n                        poster={c.poster_path}\r\n                        title={c.title || c.name}\r\n                        date={c.first_air_date || c.release_date}\r\n                        media_type={type ? \"tv\" : \"movie\"}\r\n                        vote_average={c.vote_average}\r\n                    />\r\n                ))}\r\n                {searchText &&\r\n                !content && \r\n                (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\r\n            </div>\r\n\r\n            {numOfPages > 1 && (\r\n                <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import './App.css';\nimport Header from './Components/Header/Header';\nimport SimpleBottomNavigation from './Components/MainNav';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Container } from '@mui/material';\nimport { Route, Switch } from 'react-router';\nimport Trending from './Pages/Trending/Trending';\nimport Movies from './Pages/Movies/Movies';\nimport Series from './Pages/Series/Series';\nimport Search from './Pages/Search/Search';\nimport ScrollToTop from './Components/ScrollToTop/ScrollToTop';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <ScrollToTop />\n\n      <Header />\n      <div className=\"App\">\n        <Container>\n          <Switch>\n            <Route path='/' component={ Trending } exact/>\n            <Route path='/movies' component={ Movies }/>\n            <Route path='/series' component={ Series }/>\n            <Route path='/search' component={ Search }/>\n          </Switch>\n        </Container>\n      </div>\n\n      <SimpleBottomNavigation />\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}